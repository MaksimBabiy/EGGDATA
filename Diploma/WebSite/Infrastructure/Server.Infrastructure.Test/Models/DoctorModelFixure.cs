 // <autogenerated>
namespace Server.Infrastructure.Test.Models
{
    using Server.DataBaseCore.Entities;
    using Server.Infrastructure.Models;
    using Xunit;

    public class DoctorModelFixure
    {
            [Fact]
            public void CreatedObject_NotNull()
            {
                DoctorViewModel p = new DoctorViewModel();
                Assert.NotNull(p);
            }

            [Fact]
            public void CanChangeDoctorModel()
            {
                DoctorViewModel testDoctor = new DoctorViewModel
                {
                    DoctorId = 1,
                    FirstName = "Andrew",
                    LastName = "Moshko",
                    MiddleName = "Victor",
                    Age = "18",
                    Weight = "83",
                    Height = "195",
                    Email = "dron@gmail.com",
                    PhoneNumber = "+380995135682",
                    HomeNumber = "-",
                    Sex = "man",
                    Condition = "test Doctor",
                    Text = "default string"
                };

                testDoctor.Email = "pro100takvoin@gmail.com";

                Assert.Equal("pro100takvoin@gmail.com", testDoctor.Email);
                Assert.Equal(1, testDoctor.DoctorId);
                Assert.Equal("Andrew", testDoctor.FirstName);
                Assert.Equal("Moshko", testDoctor.LastName);
                Assert.Equal("Victor", testDoctor.MiddleName);
                Assert.Equal("18", testDoctor.Age);
                Assert.Equal("83", testDoctor.Weight);
                Assert.Equal("195", testDoctor.Height);
                Assert.Equal("+380995135682", testDoctor.PhoneNumber);
                Assert.Equal("-", testDoctor.HomeNumber);
                Assert.Equal("man", testDoctor.Sex);
                Assert.Equal("test Doctor", testDoctor.Condition);
                Assert.Equal("default string", testDoctor.Text);
            }

            [Fact]
            public void ToEntity_DoctorEqualsViewModel()
            {
                DoctorViewModel testDoctor = new DoctorViewModel
                {
                    DoctorId = 1,
                    FirstName = "Andrew",
                    LastName = "Moshko",
                    MiddleName = "Victor",
                    Age = "18",
                    Weight = "83",
                    Height = "195",
                    Email = "dron@gmail.com",
                    PhoneNumber = "+380995135682",
                    HomeNumber = "-",
                    Sex = "man",
                    Condition = "test Doctor",
                    Text = "default string"
                };
                
                Doctor doctor = testDoctor.ToEntity();
                
                Assert.Equal(testDoctor.DoctorId, doctor.DoctorId);
                Assert.Equal(testDoctor.FirstName, doctor.FirstName);
                Assert.Equal(testDoctor.LastName, doctor.LastName);
                Assert.Equal(testDoctor.MiddleName, doctor.MiddleName);
                Assert.Equal(testDoctor.Age, doctor.Age);
                Assert.Equal(testDoctor.Weight, doctor.Weight);
                Assert.Equal(testDoctor.Height, doctor.Height);
                Assert.Equal(testDoctor.PhoneNumber, doctor.PhoneNumber);
                Assert.Equal(testDoctor.HomeNumber, doctor.HomeNumber);
                Assert.Equal(testDoctor.Sex, doctor.Sex);
                Assert.Equal(testDoctor.Condition, doctor.Condition);
                Assert.Equal(testDoctor.Text, doctor.Text);
            }

            [Fact]
            public void ToModel_ViewModelEqualsDoctor()
            {
                Doctor testDoctor = new Doctor
                {
                    DoctorId = 1,
                    FirstName = "Andrew",
                    LastName = "Moshko",
                    MiddleName = "Victor",
                    Age = "18",
                    Weight = "83",
                    Height = "195",
                    Email = "dron@gmail.com",
                    PhoneNumber = "+380995135682",
                    HomeNumber = "-",
                    Sex = "man",
                    Condition = "test doctor",
                    Text = "default string"
                };

                DoctorViewModel doctor = new DoctorViewModel();
                doctor.ToModel(testDoctor);

                Assert.Equal(doctor.DoctorId, testDoctor.DoctorId);
                Assert.Equal(doctor.FirstName, testDoctor.FirstName);
                Assert.Equal(doctor.LastName, testDoctor.LastName);
                Assert.Equal(doctor.MiddleName, testDoctor.MiddleName);
                Assert.Equal(doctor.Age, testDoctor.Age);
                Assert.Equal(doctor.Weight, testDoctor.Weight);
                Assert.Equal(doctor.Height, testDoctor.Height);
                Assert.Equal(doctor.PhoneNumber, testDoctor.PhoneNumber);
                Assert.Equal(doctor.HomeNumber, testDoctor.HomeNumber);
                Assert.Equal(doctor.Sex, testDoctor.Sex);
                Assert.Equal(doctor.Condition, testDoctor.Condition);
                Assert.Equal(doctor.Text, testDoctor.Text);
                //Assert.Equal(doctor.IsActive, testDoctor.IsActive);
            }
    }
}
